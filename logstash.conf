input {
  beats {
    port => 5044
  }
}

filter {
  grok {
    match => {"message"=>[
      "%{WORD:level} %{TIMESTAMP_ISO8601:date} \[%{WORD:thread}\] %{JAVACLASS:class} - %{WORD:type}\|%{NUMBER:status:int}\|%{USERNAME:user}\|%{IP:ip}",
      "%{WORD:level} %{TIMESTAMP_ISO8601:date} \[%{WORD:thread}\] %{JAVACLASS:class} - %{WORD:type}\|%{NUMBER:duration:float}\|%{DATA:action}\|%{WORD:status}\|%{USERNAME:user}",
      "(?m)%{WORD:level} %{TIMESTAMP_ISO8601:date} \[%{WORD:thread}\] %{JAVACLASS:class} - %{DATA:description}\|%{GREEDYDATA:stacktrace}"
      ]
    }
  }

  mutate {
    rename => {"@timestamp" => "processTime"}
  }

  if ![type] {
    mutate {
      add_field => {"type" => "JAVA_ERROR"}
    }
  }

  if [type]== "LOGIN" {
    
    mutate {
      add_field => {"login" => true}
    }

    if [status] > 300 {
      mutate {
        replace => {"login" => false}
      }
    }
  }


  date{
    match => ["date", "YYYY-MM-dd HH:mm:ss"]
    target => "@timestamp"
  }

  geoip {
    source => "ip"
  }

  ruby {
    code => "event.set('indexDay', event.get('[@timestamp]').time.localtime('+09:00').strftime('%Y%m%d'))"
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    template_name => "logstash"
    template_overwrite => true
    index => "logstash-%{indexDay}"
    codec => json
  }
  stdout {
    codec => json_lines
    #codec => rubydebug
  }
}
